language: cpp
git:
  depth: 1
matrix:
  include:
    - name: Windows Release
      os: windows
      env:
        - MSBUILD_PATH="c:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\MSBuild\15.0\Bin"
      script:
        - export PATH=$MSBUILD_PATH:$PATH
        - travis_wait MSBuild.exe GalileoSDK.sln //p:configuration=release //p:platform=x64
      before_deploy:
        # copy include dirs
        - mkdir -p deploy/GalileoSDK/include/GalileoSDK
        - cp -r GalileoSDK/include/* deploy/GalileoSDK/include/GalileoSDK/
        - cp -r include/* deploy/GalileoSDK/include/
        # copy dll
        - mkdir -p deploy/GalileoSDK/lib/Release
        - cp x64/Release/GalileoSDK.* deploy/GalileoSDK/lib/Release/
        - cd deploy
        - tar -czf GalileoSDK-win-${TRAVIS_TAG}.tar.gz GalileoSDK
        - cd ..
        - mv deploy/GalileoSDK-win-${TRAVIS_TAG}.tar.gz ./

      deploy:
        provider: releases
        api_key: "$token"
        file: "GalileoSDK-win-${TRAVIS_TAG}.tar.gz"
        skip_cleanup: true
        on:
          branch: master
          tags: true
    - name: Linux Build Test
      sudo: required
      dist: xenial
      before_install:
        - export DEBIAN_FRONTEND="noninteractive"
        - sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
        - sudo apt-get update -y
        - sudo apt-get install -y aria2 wget
        - sudo wget https://raw.githubusercontent.com/ilikenwf/apt-fast/master/apt-fast -O /usr/local/sbin/apt-fast
        - sudo chmod +x /usr/local/sbin/apt-fast
        - sudo wget https://raw.githubusercontent.com/ilikenwf/apt-fast/master/apt-fast.conf -O /etc/apt-fast.conf
        - sudo apt-fast update -qq
        - sudo apt-get install -y --allow-unauthenticated ros-kinetic-roscpp ros-kinetic-geometry-msgs
      script:
        # install cmake
        - cd ..
        - wget -q https://github.com/Kitware/CMake/releases/download/v3.14.0-rc4/cmake-3.14.0-rc4.tar.gz
        - tar -xzf cmake-3.14.0-rc4.tar.gz > /dev/null
        - cd cmake-3.14.0-rc4/
        - travis_wait 30 env CC=$(which clang) CXX=$(which clang++) ./bootstrap --prefix=/usr --parallel=4 | awk "(NR%200)==0{print;}"
        - make | awk "(NR%200)==0{print;}"
        - sudo make install > /dev/null
        - which cmake 
        - cmake --version
        - cd ..
        # install ros packages
        - mkdir -p amd64/src
        - cd amd64/src
        - git clone https://github.com/ros/catkin --depth=1
        - git clone https://github.com/ros/common_msgs --depth=1
        - git clone https://github.com/ros/gencpp --depth=1
        - git clone https://github.com/jsk-ros-pkg/geneus --depth=1
        - git clone https://github.com/ros/genlisp --depth=1
        - git clone https://github.com/ros/genmsg --depth=1
        - git clone https://github.com/RethinkRobotics-opensource/gennodejs --depth=1
        - git clone https://github.com/ros/genpy --depth=1
        - git clone https://github.com/ros/message_generation --depth=1
        - git clone https://github.com/ros/message_runtime --depth=1
        - git clone https://github.com/BluewhaleRobot/ros_comm --depth=1
        - git clone https://github.com/ros/ros_comm_msgs --depth=1
        - git clone https://github.com/BluewhaleRobot/rosconsole --depth=1
        - git clone https://github.com/BluewhaleRobot/roscpp_core --depth=1
        - git clone https://github.com/ros/std_msgs --depth=1
        - travis_wait 20 sudo apt-get install -yqq --allow-unauthenticated python-catkin-pkg python-catkin-tools > /dev/null
        - cd ..
        - ./src/catkin/bin/catkin_make -DCATKIN_WHITELIST_PACKAGES="" -DBUILD_SHARED_LIBS=OFF -DBoost_USE_STATIC_LIBS=ON -DBoost_LIB_PREFIX=lib -DCATKIN_ENABLE_TESTING=OFF -DCMAKE_BUILD_TYPE=Release | awk "(NR%50)==0{print;}"
        - source ./devel/setup.bash
        - cd ../GalileoSDK
        # build galileo sdk
        - cd IotWrapper
        - mkdir build
        - cd build
        - cmake -DCMAKE_BUILD_TYPE=Release ..
        - make
        - cd ../../iot
        - mkdir build
        - cd build
        - cmake -DCMAKE_BUILD_TYPE=Release ..
        - make
        - cd ../../GalileoSDK
        - mkdir build
        - cd build
        - cmake -DCMAKE_BUILD_TYPE=Release ..
        - make -j
        - sudo make install
        - cd ../../GalileoSDKTest
        - mkdir build
        - cd build
        - cmake -DCMAKE_BUILD_TYPE=Release ..
        - make -j